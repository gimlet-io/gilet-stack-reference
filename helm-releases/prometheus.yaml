{{ if .prometheus.enabled -}}
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prometheus
  namespace: infrastructure
spec:
  interval: 60m
  releaseName: prometheus
  chart:
    spec:
      chart: prometheus
      version: 25.1.0
      sourceRef:
        kind: HelmRepository
        name: prometheus
      interval: 10m
  values:
    prometheus-pushgateway:
      enabled: false
    alertmanager:
      enabled: false
    kube-state-metrics:
      containerSecurityContext:
        runAsNonRoot: true
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
      metricLabelsAllowlist:
        - pods=[app.kubernetes.io/name,app.kubernetes.io/component,app.kubernetes.io/instance]
        - deployments=[app.kubernetes.io/name,app.kubernetes.io/component,app.kubernetes.io/instance]
    configmapReload:
      prometheus:
        containerSecurityContext:
          allowPrivilegeEscalation: false
    server:
      strategy:
        type: Recreate
      {{ if .prometheus.persistence -}}
      persistentVolume:
        size: {{ default 10 .prometheus.volumeSize -}}Gi
      {{- end }}
      retention: "{{ default 14 .prometheus.retentionDays }}d"
      global:
        scrape_interval: 15s
        {{ if .prometheus.grafanaCloud.enabled -}}
        external_labels:
          cluster:  {{ .prometheus.grafanaCloud.clusterName }}
          # https://grafana.com/docs/grafana-cloud/metrics-prometheus/#sending-data-from-multiple-high-availability-prometheus-instances
          __replica__: replica1
        {{- end }}
      {{ if .prometheus.grafanaCloud.enabled -}}
      remoteWrite:
        - url: {{ .prometheus.grafanaCloud.url }}
          basic_auth:
            username: {{ .prometheus.grafanaCloud.username }}
            password: {{ .prometheus.grafanaCloud.password }}
          write_relabel_configs:
          - source_labels:
            - "__name__"
            regex: "node_load1|node_cpu_seconds_total|node_filesystem_free_bytes|node_time_seconds|node_network_transmit_bytes_total|node_network_receive_bytes_total|node_disk_reads_completed_total|node_disk_writes_completed_total|node_disk_written_bytes_total|node_disk_read_bytes_total|node_disk_io_time_weighted_seconds_total|node_filesystem_avail_bytes|node_filesystem_size_bytes|node_boot_time_seconds|node_memory_MemAvailable_bytes|node_memory_MemTotal_bytes|kube_pod_container_resource_requests|kube_node_status_capacity|kube_pod_container_status_restarts_total|kubelet_volume_stats_used_bytes|kubelet_volume_stats_capacity_bytes|container_memory_working_set_bytes|kube_pod_labels|container_cpu_usage_seconds_total|container_network_transmit_bytes_total|container_network_receive_bytes_total"
            action: "keep"
      {{- end }}
    extraScrapeConfigs: |-
    {{- if .Linkerd.Enabled }}
      - job_name: 'linkerd-controller'
        scrape_interval: 10s
        scrape_timeout: 10s
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names: ['linkerd']
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_label_linkerd_io_control_plane_component
              - __meta_kubernetes_pod_container_port_name
            action: keep
            regex: (.*);admin-http$
          - source_labels: [__meta_kubernetes_pod_container_name]
            action: replace
            target_label: component
      - job_name: 'linkerd-service-mirror'
        scrape_interval: 10s
        scrape_timeout: 10s
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_label_linkerd_io_control_plane_component
              - __meta_kubernetes_pod_container_port_name
            action: keep
            regex: linkerd-service-mirror;admin-http$
          - source_labels: [__meta_kubernetes_pod_container_name]
            action: replace
            target_label: component
      - job_name: 'linkerd-proxy'
        scrape_interval: 10s
        scrape_timeout: 10s
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
        - source_labels:
            - __meta_kubernetes_pod_container_name
            - __meta_kubernetes_pod_container_port_name
            - __meta_kubernetes_pod_label_linkerd_io_control_plane_ns
          action: keep
          regex: ^linkerd-proxy;linkerd-admin;linkerd$
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: pod
        - source_labels: [__meta_kubernetes_pod_label_linkerd_io_proxy_job]
          action: replace
          target_label: k8s_job
        - action: labeldrop
          regex: __meta_kubernetes_pod_label_linkerd_io_proxy_job
        - action: labelmap
          regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)
        - action: labeldrop
          regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)
        - action: labelmap
          regex: __meta_kubernetes_pod_label_linkerd_io_(.+)
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
          replacement: __tmp_pod_label_$1
        - action: labelmap
          regex: __tmp_pod_label_linkerd_io_(.+)
          replacement:  __tmp_pod_label_$1
        - action: labeldrop
          regex: __tmp_pod_label_linkerd_io_(.+)
        - action: labelmap
          regex: __tmp_pod_label_(.+)
    {{- end }}
{{- end }}
